# CandyHouse Local Development Infrastructure
# Lightweight setup for local development with minimal resource usage
version: '3.8'

services:
  # MongoDB - Single instance with multiple databases
  mongodb:
    image: mongo:5.0-focal
    container_name: candyhouse-mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - MONGO_INITDB_DATABASE=candyhouse-users
    networks:
      - candyhouse-dev

  # Redis - Single instance (no Sentinel for development)
  redis:
    image: redis:7-alpine
    container_name: candyhouse-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass dev-redis-password
    volumes:
      - redis_data:/data
    networks:
      - candyhouse-dev

  # Kafka - Single broker with KRaft (no Zookeeper needed)
  kafka:
    image: bitnami/kafka:latest
    container_name: candyhouse-kafka-dev
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=rJUwqKpfT5mUn1Bj9GEbRA
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - candyhouse-dev
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3



# Named volumes for data persistence
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  kafka_data:
    driver: local

# Custom network for service communication
networks:
  candyhouse-dev:
    driver: bridge

# Health check script (optional)
# Run: docker-compose -f kafka/docker-compose.dev.yml exec kafka kafka-topics.sh --bootstrap-server localhost:9092 --create --topic user --partitions 3 --replication-factor 1
