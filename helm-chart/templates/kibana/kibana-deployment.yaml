{{- if .Values.kibana.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  labels:
    app: kibana
spec:
  replicas: {{ .Values.kibana.replicas }}
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:{{ .Values.kibana.version }}
        ports:
        - containerPort: 5601
          name: http
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "http://elasticsearch-master:9200"
        - name: SERVER_NAME
          value: "kibana"
        - name: SERVER_HOST
          value: "0.0.0.0"
        - name: ELASTICSEARCH_USERNAME
          value: ""
        - name: ELASTICSEARCH_PASSWORD
          value: ""
        - name: XPACK_SECURITY_ENABLED
          value: "false"
        - name: XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED
          value: "true"
        resources:
          requests:
            cpu: {{ .Values.kibana.resources.requests.cpu }}
            memory: {{ .Values.kibana.resources.requests.memory }}
          limits:
            cpu: {{ .Values.kibana.resources.limits.cpu }}
            memory: {{ .Values.kibana.resources.limits.memory }}
        livenessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 30
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  labels:
    app: kibana
spec:
  type: {{ .Values.kibana.service.type }}
  ports:
  - port: 5601
    targetPort: 5601
    name: http
    {{- if and (eq .Values.kibana.service.type "LoadBalancer") .Values.kibana.service.loadBalancerIP }}
    loadBalancerIP: {{ .Values.kibana.service.loadBalancerIP }}
    {{- end }}
  selector:
    app: kibana
{{- end }}
