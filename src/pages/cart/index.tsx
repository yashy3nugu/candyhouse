import { type NextPage } from "next";
import Head from "next/head";

import { api } from "@/utils/api";
import { List, Heading, ListItem, Text, Button } from "@chakra-ui/react";
import { useAppDispatch, useAppSelector } from "@/store/hooks";
import {
  addCandyToCart,
  clearCart,
  removeCandyFromCart,
} from "@/store/modules/cart";
import { Role } from "@/utils/types/user";

const Cart: NextPage = () => {
  const dispatch = useAppDispatch();
  const cartItems = useAppSelector((state) => state.cart.items);
  const cartValue = useAppSelector((state) => state.cart.value);
  const cartPrice = useAppSelector((state) => state.cart.price);

  const { mutate: createOrder, isLoading } = api.order.create.useMutation({
    onSuccess() {
      // dispatch(clearCart());
      alert("placed order")
      // router.replace("/store");
    },
  });

  const { isLoading: isUserLoading, data: user } = api.auth.user.useQuery();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {cartValue > 0 ? (
          <>
            <Heading>Your cart ({cartValue})</Heading>
            <List spacing={2}>
              {cartItems.map((candy) => (
                <ListItem key={candy._id}>
                  <Text>Name: {candy.name}</Text>
                  <Text>Description: {candy.description}</Text>
                  <Text>Number of items: {candy.itemsInCart}</Text>
                  <Text>Price: {candy.price}</Text>
                </ListItem>
              ))}
            </List>
            <Text>Total: {cartPrice}</Text>

            {!isUserLoading &&
              (user!.role === Role.User ? (
                <Button
                  onClick={() => {
                    const items = [] as {
                      candy: string;
                      itemsInCart: number;
                    }[];

                    cartItems.forEach(({ _id, itemsInCart }) => {
                      items.push({
                        candy: _id,
                        itemsInCart,
                      });
                    });

                    createOrder({
                      items,
                    });
                  }}
                >
                  Place order
                </Button>
              ) : (
                <>Login as user</>
              ))}
          </>
        ) : (
          <Heading>Your cart is empty</Heading>
        )}
      </main>
    </>
  );
};

export default Cart;
