# CandyHouse Secrets Configuration
# Copy this file to secrets.yaml and fill in your actual values
# 
# IMPORTANT: Never commit secrets.yaml to version control!
# Add secrets.yaml to your .gitignore file

# MongoDB Connection Strings
# Create separate databases for each microservice
mongodb:
  userService: "mongodb://localhost:27017/candyhouse-users"
  productService: "mongodb://localhost:27017/candyhouse-products" 
  orderService: "mongodb://localhost:27017/candyhouse-orders"

# JWT Authentication
jwt:
  # Generate a secure random string (minimum 32 characters)
  # You can use: openssl rand -base64 32
  secret: "your-super-secure-jwt-secret-key-here-minimum-32-chars"
  expiresIn: "24"  # Hours

# API Keys for External Services
apiKeys:
  # Stripe Payment Gateway
  # Get from: https://dashboard.stripe.com/apikeys
  paymentGateway: "sk_test_your_stripe_secret_key_here"

# Cloudinary Configuration
# Get from: https://cloudinary.com/console
cloudinary:
  cloudName: "your-cloudinary-cloud-name"
  apiKey: "your-cloudinary-api-key" 
  apiSecret: "your-cloudinary-api-secret"
  folderName: "candyhouse"

# Kafka Configuration (usually internal, but can be customized)
kafka:
  url: "candyhouse-kafka:9092"

# Redis Configuration
redis:
  auth:
    # Set a secure password for Redis
    password: "your-redis-password-here"

# Optional: Stripe Webhook Configuration
# Get from: https://dashboard.stripe.com/webhooks
stripe:
  webhookSecret: "whsec_your_stripe_webhook_secret_here"

# Optional: Additional Environment-specific Settings
environment:
  nodeEnv: "production"
  logLevel: "info"
  
# Optional: CORS Origins (for production)
cors:
  origins:
    - "https://candyhouse.com"
    - "https://www.candyhouse.com"
    - "https://admin.candyhouse.com"

# Optional: Rate Limiting Configuration
rateLimit:
  windowMs: 900000  # 15 minutes in milliseconds
  maxRequests: 100  # Maximum requests per window per IP

#############################################
# SETUP INSTRUCTIONS:
#############################################

# 1. MONGODB SETUP:
#    - Install MongoDB locally or use MongoDB Atlas
#    - Create three separate databases:
#      * candyhouse-users
#      * candyhouse-products  
#      * candyhouse-orders
#    - Update the connection strings above

# 2. JWT SECRET:
#    - Generate a secure random string:
#      openssl rand -base64 32
#    - Replace "your-super-secure-jwt-secret-key-here-minimum-32-chars"

# 3. STRIPE SETUP:
#    - Create account at https://stripe.com
#    - Get API keys from https://dashboard.stripe.com/apikeys
#    - Replace "sk_test_your_stripe_secret_key_here"
#    - For webhooks: https://dashboard.stripe.com/webhooks

# 4. CLOUDINARY SETUP:
#    - Create account at https://cloudinary.com
#    - Get credentials from https://cloudinary.com/console
#    - Replace the cloudinary values above

# 5. REDIS PASSWORD:
#    - Generate a secure password for Redis
#    - Replace "your-redis-password-here"

# 6. DEPLOYMENT:
#    - Save this file as secrets.yaml (NOT secrets.example.yaml)
#    - Add secrets.yaml to .gitignore
#    - Deploy: helm install candyhouse ./helm-chart -f secrets.yaml

#############################################
# EXAMPLE DEVELOPMENT VALUES:
#############################################

# For local development, you can use these example values:
# 
# mongodb:
#   userService: "mongodb://localhost:27017/candyhouse-users-dev"
#   productService: "mongodb://localhost:27017/candyhouse-products-dev"
#   orderService: "mongodb://localhost:27017/candyhouse-orders-dev"
#
# jwt:
#   secret: "dev-jwt-secret-not-for-production-use-only"
#   expiresIn: "24"
#
# apiKeys:
#   paymentGateway: "sk_test_51234567890abcdef"  # Stripe test key
#
# cloudinary:
#   cloudName: "demo-cloud"
#   apiKey: "123456789012345"
#   apiSecret: "demo-secret-not-for-production"
#   folderName: "candyhouse-dev"
#
# redis:
#   auth:
#     password: "dev-redis-password"
