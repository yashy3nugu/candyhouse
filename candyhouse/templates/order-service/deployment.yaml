apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.orderService.name }}
  labels:
    app: {{ .Values.orderService.name }}
    {{- include "candyhouse.labels" (dict "name" .Values.orderService.name "Release" .Release) | nindent 4 }}
spec:
  replicas: {{ .Values.orderService.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.orderService.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.orderService.name }}
    spec:
      containers:
      - name: {{ .Values.orderService.name }}
        image: "{{ .Values.orderService.image.repository }}:{{ .Values.orderService.image.tag }}"
        imagePullPolicy: {{ .Values.orderService.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.orderService.service.targetPort }}
        env:
        - name: NODE_ENV
          value: {{ .Values.global.environment }}
        - name: PORT
          value: "{{ .Values.orderService.service.targetPort }}"
        - name: LOG_FORMAT
          value: "{{ .Values.global.logging.format }}"
        - name: LOG_DIR
          value: "{{ .Values.global.logging.directory }}"
        - name: ORIGIN
          value: "*"
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.orderService.name }}
              key: mongo-uri
        - name: KAFKA_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.kafka.name }}
              key: url
        resources:
          {{- toYaml .Values.orderService.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.orderService.service.targetPort }}
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.orderService.service.targetPort }}
          initialDelaySeconds: 5
          periodSeconds: 10 