{{- if .Values.secrets.kafka.create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secrets.kafka.name }}
type: Opaque
stringData:
  url: "{{ .Values.kafka.url }}"
---
{{- end }}

{{- if .Values.secrets.userService.create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secrets.userService.name }}
type: Opaque
stringData:
  mongo-uri: "{{ .Values.mongodb.userService }}"
  {{- if .Values.jwt }}
  jwt-secret: "{{ .Values.jwt.secret }}"
  {{- end }}
---
{{- end }}

{{- if .Values.secrets.orderService.create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secrets.orderService.name }}
type: Opaque
stringData:
  mongo-uri: "{{ .Values.mongodb.orderService }}"
  {{- if .Values.apiKeys }}
  payment-gateway-key: "{{ .Values.apiKeys.paymentGateway }}"
  {{- end }}
---
{{- end }}

{{- if .Values.secrets.productService.create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secrets.productService.name }}
type: Opaque
stringData:
  mongo-uri: "{{ .Values.mongodb.productService }}"
---
{{- end }}

{{- if .Values.secrets.cloudinary.create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secrets.cloudinary.name }}
type: Opaque
stringData:
  cloud-name: "{{ .Values.cloudinary.cloudName }}"
  api-key: "{{ .Values.cloudinary.apiKey }}"
  api-secret: "{{ .Values.cloudinary.apiSecret }}"
  folder-name: "{{ .Values.cloudinary.folderName | default "candyhouse" }}"
{{- end }}

{{- if and .Values.secrets.jwt.create .Values.jwt }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secrets.jwt.name }}
type: Opaque
stringData:
  secret: "{{ .Values.jwt.secret }}"
  expires-in: "{{ .Values.jwt.expiresIn | default 24 }}"
{{- end }} 