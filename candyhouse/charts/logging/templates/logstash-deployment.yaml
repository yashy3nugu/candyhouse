# Logstash Deployment and Pipeline Config Map
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: {{ .Release.Namespace }}
  labels:
    app: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:7.10.0
        ports:
        - containerPort: 5044
        volumeMounts:
        - name: logstash-pipeline
          mountPath: /usr/share/logstash/pipeline/logstash.conf
          subPath: logstash.conf
      volumes:
      - name: logstash-pipeline
        configMap:
          name: logstash-pipeline-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: logstash
data:
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }

    filter {
      if [type] == "docker" {
        grok {
          match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} %{GREEDYDATA:msg}" }
          overwrite => [ "message" ]
        }
        date {
          match => [ "timestamp", "ISO8601" ]
        }
      }
    }

    output {
      stdout { codec => rubydebug }
      # Elasticsearch output disabled
    } 